{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesPortfolio/src/components/Galaxy.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nexport default function Model(_ref) {\n  let props = Object.assign({}, _ref);\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"/galaxy.glb\");\n  const {\n    actions\n  } = useAnimations(animations, group);\n  const galaxyRef = useRef(null);\n  useFrame(() => {\n    galaxyRef.current.rotation.y = galaxyRef.current.rotation.y += 0.001;\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: galaxyRef\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [-Math.PI / 2, 0, 0],\n      scale: [0.06, 0.06, 0.06],\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        rotation: [Math.PI / 2, 0, 0],\n        children: [/*#__PURE__*/_jsxDEV(\"group\", {\n          rotation: [-Math.PI / 2, 0, 0],\n          children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n            geometry: nodes[\"Galaxy_Material_#65_0\"].geometry,\n            material: materials.Material_65\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n          name: \"Sphere001\",\n          rotation: [-Math.PI / 2, 0, 0],\n          children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n            geometry: nodes[\"Sphere001_02_-_Default_0\"].geometry,\n            material: materials[\"02_-_Default\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\nuseGLTF.preload(\"/galaxy.glb\");","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesPortfolio/src/components/Galaxy.js"],"names":["React","useRef","useGLTF","useAnimations","useFrame","Model","props","group","nodes","materials","animations","actions","galaxyRef","current","rotation","y","Math","PI","geometry","Material_65","preload"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,mBAAvC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,eAAe,SAASC,KAAT,OAA6B;AAAA,MAATC,KAAS;AAC1C,QAAMC,KAAK,GAAGN,MAAM,EAApB;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAmCR,OAAO,CAAC,aAAD,CAAhD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAcR,aAAa,CAACO,UAAD,EAAaH,KAAb,CAAjC;AACA,QAAMK,SAAS,GAAGX,MAAM,CAAC,IAAD,CAAxB;AAEAG,EAAAA,QAAQ,CAAC,MAAM;AACbQ,IAAAA,SAAS,CAACC,OAAV,CAAkBC,QAAlB,CAA2BC,CAA3B,GAA+BH,SAAS,CAACC,OAAV,CAAkBC,QAAlB,CAA2BC,CAA3B,IAAgC,KAA/D;AACD,GAFO,CAAR;AAIA,sBACE;AAAO,IAAA,GAAG,EAAEH;AAAZ,KAA2BN,KAA3B;AAAkC,IAAA,OAAO,EAAE,IAA3C;AAAA,2BACE;AAAO,MAAA,QAAQ,EAAE,CAAC,CAACU,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjB;AAAuC,MAAA,KAAK,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAA9C;AAAA,6BACE;AAAO,QAAA,QAAQ,EAAE,CAACD,IAAI,CAACC,EAAL,GAAU,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAjB;AAAA,gCACE;AAAO,UAAA,QAAQ,EAAE,CAAC,CAACD,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjB;AAAA,iCACE;AACE,YAAA,QAAQ,EAAET,KAAK,CAAC,uBAAD,CAAL,CAA+BU,QAD3C;AAEE,YAAA,QAAQ,EAAET,SAAS,CAACU;AAFtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,QAAQ,EAAE,CAAC,CAACH,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAlC;AAAA,iCACE;AACE,YAAA,QAAQ,EAAET,KAAK,CAAC,0BAAD,CAAL,CAAkCU,QAD9C;AAEE,YAAA,QAAQ,EAAET,SAAS,CAAC,cAAD;AAFrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;AAEDP,OAAO,CAACkB,OAAR,CAAgB,aAAhB","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"/galaxy.glb\");\n  const { actions } = useAnimations(animations, group);\n  const galaxyRef = useRef(null);\n\n  useFrame(() => {\n    galaxyRef.current.rotation.y = galaxyRef.current.rotation.y += 0.001;\n  });\n\n  return (\n    <group ref={galaxyRef} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]} scale={[0.06, 0.06, 0.06]}>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <group rotation={[-Math.PI / 2, 0, 0]}>\n            <mesh\n              geometry={nodes[\"Galaxy_Material_#65_0\"].geometry}\n              material={materials.Material_65}\n            />\n          </group>\n          <group name=\"Sphere001\" rotation={[-Math.PI / 2, 0, 0]}>\n            <mesh\n              geometry={nodes[\"Sphere001_02_-_Default_0\"].geometry}\n              material={materials[\"02_-_Default\"]}\n            />\n          </group>\n        </group>\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/galaxy.glb\");\n"]},"metadata":{},"sourceType":"module"}