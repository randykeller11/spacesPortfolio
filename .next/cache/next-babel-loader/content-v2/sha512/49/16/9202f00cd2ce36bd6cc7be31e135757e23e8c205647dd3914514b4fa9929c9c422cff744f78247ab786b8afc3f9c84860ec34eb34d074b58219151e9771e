{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesPortfolio/src/components/NewWall/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nexport default function Model(_ref) {\n  let props = Object.assign({}, _ref);\n  const group = useRef();\n  const {\n    nodes,\n    materials\n  } = useGLTF(\"/wall.glb\");\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      geometry: nodes.wall.geometry,\n      material: materials[\"wall.mat\"],\n      \"material-color\": \"orange\",\n      scale: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\nuseGLTF.preload(\"/wall.glb\");","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesPortfolio/src/components/NewWall/index.tsx"],"names":["React","useRef","useGLTF","Model","props","group","nodes","materials","wall","geometry","preload"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAYA,eAAe,SAASC,KAAT,OAA6D;AAAA,MAAzCC,KAAyC;AAC1E,QAAMC,KAAK,GAAGJ,MAAM,EAApB;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBL,OAAO,CAAC,WAAD,CAApC;AACA,sBACE;AAAO,IAAA,GAAG,EAAEG;AAAZ,KAAuBD,KAAvB;AAA8B,IAAA,OAAO,EAAE,IAAvC;AAAA,2BACE;AACE,MAAA,QAAQ,EAAEE,KAAK,CAACE,IAAN,CAAWC,QADvB;AAEE,MAAA,QAAQ,EAAEF,SAAS,CAAC,UAAD,CAFrB;AAGE,wBAAgB,QAHlB;AAIE,MAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAEDL,OAAO,CAACQ,OAAR,CAAgB,WAAhB","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from \"three\";\nimport React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { GLTF } from \"three-stdlib\";\n\ntype GLTFResult = GLTF & {\n  nodes: {\n    wall: THREE.Mesh;\n  };\n  materials: {\n    [\"wall.mat\"]: THREE.MeshStandardMaterial;\n  };\n};\n\nexport default function Model({ ...props }: JSX.IntrinsicElements[\"group\"]) {\n  const group = useRef<THREE.Group>();\n  const { nodes, materials } = useGLTF(\"/wall.glb\") as GLTFResult;\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.wall.geometry}\n        material={materials[\"wall.mat\"]}\n        material-color={\"orange\"}\n        scale={0.2}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/wall.glb\");\n"]},"metadata":{},"sourceType":"module"}