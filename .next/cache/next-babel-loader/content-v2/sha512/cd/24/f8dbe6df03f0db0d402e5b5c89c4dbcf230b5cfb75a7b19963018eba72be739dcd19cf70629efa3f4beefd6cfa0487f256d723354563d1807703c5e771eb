{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesPortfolio/src/components/SpacesGallery.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef } from 'react';\nimport { useGLTF } from '@react-three/drei';\nexport default function Model(_ref) {\n  let props = Object.assign({}, _ref);\n  const group = useRef();\n  const {\n    nodes,\n    materials\n  } = useGLTF('/spacesGallery.glb');\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({\n    ref: group\n  }, props), {}, {\n    dispose: null,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [-Math.PI / 2, 0, 0],\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        scale: 0.01,\n        children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n          geometry: nodes.Mesh_0.geometry,\n          material: nodes.Mesh_0.material\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n          geometry: nodes.Mesh_1.geometry,\n          material: nodes.Mesh_1.material\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\nuseGLTF.preload('/spacesGallery.glb');","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesPortfolio/src/components/SpacesGallery.js"],"names":["React","useRef","useGLTF","Model","props","group","nodes","materials","Math","PI","Mesh_0","geometry","material","Mesh_1","preload"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,eAAe,SAASC,KAAT,OAA6B;AAAA,MAATC,KAAS;AAC1C,QAAMC,KAAK,GAAGJ,MAAM,EAApB;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBL,OAAO,CAAC,oBAAD,CAApC;AACA,sBACE;AAAO,IAAA,GAAG,EAAEG;AAAZ,KAAuBD,KAAvB;AAA8B,IAAA,OAAO,EAAE,IAAvC;AAAA,2BACE;AAAO,MAAA,QAAQ,EAAE,CAAC,CAACI,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAAjB;AAAA,6BACE;AAAO,QAAA,KAAK,EAAE,IAAd;AAAA,gCACE;AAAM,UAAA,QAAQ,EAAEH,KAAK,CAACI,MAAN,CAAaC,QAA7B;AAAuC,UAAA,QAAQ,EAAEL,KAAK,CAACI,MAAN,CAAaE;AAA9D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,QAAQ,EAAEN,KAAK,CAACO,MAAN,CAAaF,QAA7B;AAAuC,UAAA,QAAQ,EAAEL,KAAK,CAACO,MAAN,CAAaD;AAA9D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AAEDV,OAAO,CAACY,OAAR,CAAgB,oBAAhB","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/spacesGallery.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group scale={0.01}>\n          <mesh geometry={nodes.Mesh_0.geometry} material={nodes.Mesh_0.material} />\n          <mesh geometry={nodes.Mesh_1.geometry} material={nodes.Mesh_1.material} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/spacesGallery.glb')\n"]},"metadata":{},"sourceType":"module"}