{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesPortfolio/src/components/Poster/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useTexture } from \"@react-three/drei\";\nexport default function Poster(props) {\n  const {\n    src\n  } = props,\n        rest = _objectWithoutProperties(props, [\"src\"]);\n\n  const texture = useTexture(src);\n  return /*#__PURE__*/_jsxDEV(\"group\", _objectSpread(_objectSpread({}, rest), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n        attach: \"geometry\",\n        args: [3, 3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        attach: \"material\",\n        map: texture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesPortfolio/src/components/Poster/index.tsx"],"names":["useTexture","Poster","props","src","rest","texture"],"mappings":";;;;;;;;;;;;;AAGA,SAASA,UAAT,QAA2B,mBAA3B;AAKA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAmBD,KAAzB;AAAA,QAAgBE,IAAhB,4BAAyBF,KAAzB;;AACA,QAAMG,OAAO,GAAGL,UAAU,CAACG,GAAD,CAA1B;AAEA,sBACE,iDAAWC,IAAX;AAAA,2BACE;AAAA,8BACE;AAAqB,QAAA,MAAM,EAAC,UAA5B;AAAuC,QAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAmB,QAAA,MAAM,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD","sourcesContent":["import { useEffect, useMemo } from \"react\";\nimport * as THREE from \"three\";\nimport { GroupProps, useLoader } from \"@react-three/fiber\";\nimport { useTexture } from \"@react-three/drei\";\nexport type PosterProps = {\n  src: string;\n} & GroupProps;\n\nexport default function Poster(props: PosterProps) {\n  const { src, ...rest } = props;\n  const texture = useTexture(src);\n\n  return (\n    <group {...rest}>\n      <mesh>\n        <planeBufferGeometry attach=\"geometry\" args={[3, 3]} />\n        <meshBasicMaterial attach=\"material\" map={texture} />\n      </mesh>\n    </group>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}