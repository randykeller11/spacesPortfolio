{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _extends from \"/Users/dub_ceo/Desktop/spacesPortfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesPortfolio/src/components/AvatarTyping.js\",\n    _s = $RefreshSig$();\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nexport default function Model(_ref) {\n  _s();\n\n  var props = _extends({}, _ref);\n\n  var group = useRef();\n\n  var _useGLTF = useGLTF(\"/avatarTyping.glb\"),\n      nodes = _useGLTF.nodes,\n      materials = _useGLTF.materials,\n      animations = _useGLTF.animations;\n\n  var _useAnimations = useAnimations(animations, group),\n      actions = _useAnimations.actions;\n\n  var materialKeys = Object.keys(materials);\n  materialKeys.map(function (materialKey) {\n    return materials[materialKey].skinning = true;\n  });\n  useEffect(function () {\n    actions[\"Armature|mixamo.com|Layer0\"].play();\n    group.current.position = [13, -1.1, -13];\n    group.current.scale = [1.5, 1.5, 1.5];\n    group.current.rotation = [0, 0.6, 0];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: nodes.Hips\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Body.geometry,\n      material: materials.Wolf3D_Body,\n      skeleton: nodes.Wolf3D_Body.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Outfit_Bottom.geometry,\n      material: materials.Wolf3D_Outfit_Bottom,\n      skeleton: nodes.Wolf3D_Outfit_Bottom.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Outfit_Footwear.geometry,\n      material: materials.Wolf3D_Outfit_Footwear,\n      skeleton: nodes.Wolf3D_Outfit_Footwear.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Outfit_Top.geometry,\n      material: materials.Wolf3D_Outfit_Top,\n      skeleton: nodes.Wolf3D_Outfit_Top.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"EyeLeft\",\n      geometry: nodes.EyeLeft.geometry,\n      material: nodes.EyeLeft.material,\n      skeleton: nodes.EyeLeft.skeleton,\n      morphTargetDictionary: nodes.EyeLeft.morphTargetDictionary,\n      morphTargetInfluences: nodes.EyeLeft.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"EyeRight\",\n      geometry: nodes.EyeRight.geometry,\n      material: nodes.EyeRight.material,\n      skeleton: nodes.EyeRight.skeleton,\n      morphTargetDictionary: nodes.EyeRight.morphTargetDictionary,\n      morphTargetInfluences: nodes.EyeRight.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"Wolf3D_Head\",\n      geometry: nodes.Wolf3D_Head.geometry,\n      material: materials.Wolf3D_Skin,\n      skeleton: nodes.Wolf3D_Head.skeleton,\n      morphTargetDictionary: nodes.Wolf3D_Head.morphTargetDictionary,\n      morphTargetInfluences: nodes.Wolf3D_Head.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"Wolf3D_Teeth\",\n      geometry: nodes.Wolf3D_Teeth.geometry,\n      material: materials.Wolf3D_Teeth,\n      skeleton: nodes.Wolf3D_Teeth.skeleton,\n      morphTargetDictionary: nodes.Wolf3D_Teeth.morphTargetDictionary,\n      morphTargetInfluences: nodes.Wolf3D_Teeth.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Model, \"KxDxGPal5drP5ChuU0de21QKYCw=\", false, function () {\n  return [useGLTF, useAnimations];\n});\n\n_c = Model;\nuseGLTF.preload(\"/avatarTyping.glb\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Model\");","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesPortfolio/src/components/AvatarTyping.js"],"names":["React","useRef","useEffect","useGLTF","useAnimations","Model","props","group","nodes","materials","animations","actions","materialKeys","Object","keys","map","materialKey","skinning","play","current","position","scale","rotation","Hips","Wolf3D_Body","geometry","skeleton","Wolf3D_Outfit_Bottom","Wolf3D_Outfit_Footwear","Wolf3D_Outfit_Top","EyeLeft","material","morphTargetDictionary","morphTargetInfluences","EyeRight","Wolf3D_Head","Wolf3D_Skin","Wolf3D_Teeth","preload"],"mappings":"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","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"/avatarTyping.glb\");\n  const { actions } = useAnimations(animations, group);\n\n  const materialKeys = Object.keys(materials);\n  materialKeys.map((materialKey) => (materials[materialKey].skinning = true));\n\n  useEffect(() => {\n    actions[\"Armature|mixamo.com|Layer0\"].play();\n    group.current.position = [13, -1.1, -13];\n    group.current.scale = [1.5, 1.5, 1.5];\n    group.current.rotation = [0, 0.6, 0];\n  }, []);\n  return (\n    <group ref={group} dispose={null}>\n      <primitive object={nodes.Hips} />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Body.geometry}\n        material={materials.Wolf3D_Body}\n        skeleton={nodes.Wolf3D_Body.skeleton}\n      />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}\n        material={materials.Wolf3D_Outfit_Bottom}\n        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}\n      />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}\n        material={materials.Wolf3D_Outfit_Footwear}\n        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}\n      />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Outfit_Top.geometry}\n        material={materials.Wolf3D_Outfit_Top}\n        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}\n      />\n      <skinnedMesh\n        name=\"EyeLeft\"\n        geometry={nodes.EyeLeft.geometry}\n        material={nodes.EyeLeft.material}\n        skeleton={nodes.EyeLeft.skeleton}\n        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}\n        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}\n      />\n      <skinnedMesh\n        name=\"EyeRight\"\n        geometry={nodes.EyeRight.geometry}\n        material={nodes.EyeRight.material}\n        skeleton={nodes.EyeRight.skeleton}\n        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}\n        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}\n      />\n      <skinnedMesh\n        name=\"Wolf3D_Head\"\n        geometry={nodes.Wolf3D_Head.geometry}\n        material={materials.Wolf3D_Skin}\n        skeleton={nodes.Wolf3D_Head.skeleton}\n        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}\n        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}\n      />\n      <skinnedMesh\n        name=\"Wolf3D_Teeth\"\n        geometry={nodes.Wolf3D_Teeth.geometry}\n        material={materials.Wolf3D_Teeth}\n        skeleton={nodes.Wolf3D_Teeth.skeleton}\n        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}\n        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/avatarTyping.glb\");\n"]},"metadata":{},"sourceType":"module"}