{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dub_ceo/Desktop/spacesPortfolio/src/components/AvatarTyping.js\";\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport React, { useRef, useEffect } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\nexport default function Model(_ref) {\n  let props = Object.assign({}, _ref);\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"/avatarTyping.glb\");\n  const {\n    actions\n  } = useAnimations(animations, group);\n  const materialKeys = Object.keys(materials);\n  materialKeys.map(materialKey => materials[materialKey].skinning = true); // useEffect(() => {\n  //   actions[\"Armature|mixamo.com|Layer0\"].play();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: group,\n    position: [13, -1.1, -13],\n    scale: [1.5, 1.5, 1.5],\n    rotation: [0, 0.6, 0],\n    dispose: null,\n    children: [/*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: nodes.Hips\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Body.geometry,\n      material: materials.Wolf3D_Body,\n      skeleton: nodes.Wolf3D_Body.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Outfit_Bottom.geometry,\n      material: materials.Wolf3D_Outfit_Bottom,\n      skeleton: nodes.Wolf3D_Outfit_Bottom.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Outfit_Footwear.geometry,\n      material: materials.Wolf3D_Outfit_Footwear,\n      skeleton: nodes.Wolf3D_Outfit_Footwear.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      geometry: nodes.Wolf3D_Outfit_Top.geometry,\n      material: materials.Wolf3D_Outfit_Top,\n      skeleton: nodes.Wolf3D_Outfit_Top.skeleton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"EyeLeft\",\n      geometry: nodes.EyeLeft.geometry,\n      material: nodes.EyeLeft.material,\n      skeleton: nodes.EyeLeft.skeleton,\n      morphTargetDictionary: nodes.EyeLeft.morphTargetDictionary,\n      morphTargetInfluences: nodes.EyeLeft.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"EyeRight\",\n      geometry: nodes.EyeRight.geometry,\n      material: nodes.EyeRight.material,\n      skeleton: nodes.EyeRight.skeleton,\n      morphTargetDictionary: nodes.EyeRight.morphTargetDictionary,\n      morphTargetInfluences: nodes.EyeRight.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"Wolf3D_Head\",\n      geometry: nodes.Wolf3D_Head.geometry,\n      material: materials.Wolf3D_Skin,\n      skeleton: nodes.Wolf3D_Head.skeleton,\n      morphTargetDictionary: nodes.Wolf3D_Head.morphTargetDictionary,\n      morphTargetInfluences: nodes.Wolf3D_Head.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"skinnedMesh\", {\n      name: \"Wolf3D_Teeth\",\n      geometry: nodes.Wolf3D_Teeth.geometry,\n      material: materials.Wolf3D_Teeth,\n      skeleton: nodes.Wolf3D_Teeth.skeleton,\n      morphTargetDictionary: nodes.Wolf3D_Teeth.morphTargetDictionary,\n      morphTargetInfluences: nodes.Wolf3D_Teeth.morphTargetInfluences\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\nuseGLTF.preload(\"/avatarTyping.glb\");","map":{"version":3,"sources":["/Users/dub_ceo/Desktop/spacesPortfolio/src/components/AvatarTyping.js"],"names":["React","useRef","useEffect","useGLTF","useAnimations","Model","props","group","nodes","materials","animations","actions","materialKeys","Object","keys","map","materialKey","skinning","Hips","Wolf3D_Body","geometry","skeleton","Wolf3D_Outfit_Bottom","Wolf3D_Outfit_Footwear","Wolf3D_Outfit_Top","EyeLeft","material","morphTargetDictionary","morphTargetInfluences","EyeRight","Wolf3D_Head","Wolf3D_Skin","Wolf3D_Teeth","preload"],"mappings":"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","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"/avatarTyping.glb\");\n  const { actions } = useAnimations(animations, group);\n\n  const materialKeys = Object.keys(materials);\n  materialKeys.map((materialKey) => (materials[materialKey].skinning = true));\n\n  // useEffect(() => {\n  //   actions[\"Armature|mixamo.com|Layer0\"].play();\n  // }, []);\n  return (\n    <group\n      ref={group}\n      position={[13, -1.1, -13]}\n      scale={[1.5, 1.5, 1.5]}\n      rotation={[0, 0.6, 0]}\n      dispose={null}\n    >\n      <primitive object={nodes.Hips} />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Body.geometry}\n        material={materials.Wolf3D_Body}\n        skeleton={nodes.Wolf3D_Body.skeleton}\n      />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}\n        material={materials.Wolf3D_Outfit_Bottom}\n        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}\n      />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}\n        material={materials.Wolf3D_Outfit_Footwear}\n        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}\n      />\n      <skinnedMesh\n        geometry={nodes.Wolf3D_Outfit_Top.geometry}\n        material={materials.Wolf3D_Outfit_Top}\n        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}\n      />\n      <skinnedMesh\n        name=\"EyeLeft\"\n        geometry={nodes.EyeLeft.geometry}\n        material={nodes.EyeLeft.material}\n        skeleton={nodes.EyeLeft.skeleton}\n        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}\n        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}\n      />\n      <skinnedMesh\n        name=\"EyeRight\"\n        geometry={nodes.EyeRight.geometry}\n        material={nodes.EyeRight.material}\n        skeleton={nodes.EyeRight.skeleton}\n        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}\n        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}\n      />\n      <skinnedMesh\n        name=\"Wolf3D_Head\"\n        geometry={nodes.Wolf3D_Head.geometry}\n        material={materials.Wolf3D_Skin}\n        skeleton={nodes.Wolf3D_Head.skeleton}\n        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}\n        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}\n      />\n      <skinnedMesh\n        name=\"Wolf3D_Teeth\"\n        geometry={nodes.Wolf3D_Teeth.geometry}\n        material={materials.Wolf3D_Teeth}\n        skeleton={nodes.Wolf3D_Teeth.skeleton}\n        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}\n        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/avatarTyping.glb\");\n"]},"metadata":{},"sourceType":"module"}